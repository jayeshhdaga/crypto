{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,TextField}from\"@material-ui/core\";import{useState}from\"react\";import{CryptoState}from\"../../CryptoContext\";import{createUserWithEmailAndPassword}from\"firebase/auth\";import{auth}from\"../../firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=function Signup(_ref){var handleClose=_ref.handleClose;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _CryptoState=CryptoState(),setAlert=_CryptoState.setAlert;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(password!==confirmPassword)){_context.next=3;break;}setAlert({open:true,message:\"Passwords do not match\",type:\"error\"});return _context.abrupt(\"return\");case 3:_context.prev=3;_context.next=6;return createUserWithEmailAndPassword(auth,email,password);case 6:result=_context.sent;setAlert({open:true,message:\"Sign Up Successful. Welcome \".concat(result.user.email),type:\"success\"});handleClose();_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);setAlert({open:true,message:_context.t0.message,type:\"error\"});return _context.abrupt(\"return\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function handleSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Box,{p:3,style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"},children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"email\",label:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",label:\"Enter Password\",type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",label:\"Confirm Password\",type:\"password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",style:{backgroundColor:\"#EEBC1D\"},onClick:handleSubmit,children:\"Sign Up\"})]});};export default Signup;","map":{"version":3,"names":["Box","Button","TextField","useState","CryptoState","createUserWithEmailAndPassword","auth","Signup","handleClose","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setAlert","handleSubmit","open","message","type","result","user","display","flexDirection","gap","e","target","value","backgroundColor"],"sources":["C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/src/Components/Authentication/Signup.js"],"sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { CryptoState } from \"../../CryptoContext\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../firebase\";\r\n\r\nconst Signup = ({ handleClose }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const { setAlert } = CryptoState();\r\n\r\n  const handleSubmit = async () => {\r\n    if (password !== confirmPassword) {\r\n      setAlert({\r\n        open: true,\r\n        message: \"Passwords do not match\",\r\n        type: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await createUserWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n      setAlert({\r\n        open: true,\r\n        message: `Sign Up Successful. Welcome ${result.user.email}`,\r\n        type: \"success\",\r\n      });\r\n\r\n      handleClose();\r\n    } catch (error) {\r\n      setAlert({\r\n        open: true,\r\n        message: error.message,\r\n        type: \"error\",\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      p={3}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"20px\",\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        type=\"email\"\r\n        label=\"Enter Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Enter Password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Confirm Password\"\r\n        type=\"password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        fullWidth\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        style={{ backgroundColor: \"#EEBC1D\" }}\r\n        onClick={handleSubmit}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"mappings":"0bAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,mBAAvC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,8BAAT,KAA+C,eAA/C,CACA,OAASC,IAAT,KAAqB,gBAArB,C,wFAEA,GAAMC,OAAM,CAAG,QAATA,OAAS,MAAqB,IAAlBC,YAAkB,MAAlBA,WAAkB,CAClC,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA8CT,QAAQ,CAAC,EAAD,CAAtD,yCAAOU,eAAP,eAAwBC,kBAAxB,eAEA,iBAAqBV,WAAW,EAAhC,CAAQW,QAAR,cAAQA,QAAR,CAEA,GAAMC,aAAY,6FAAG,qJACfL,QAAQ,GAAKE,eADE,0BAEjBE,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,wBAFF,CAGPC,IAAI,CAAE,OAHC,CAAD,CAAR,CAFiB,8EAWId,+BAA8B,CACjDC,IADiD,CAEjDG,KAFiD,CAGjDE,QAHiD,CAXlC,QAWXS,MAXW,eAgBjBL,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,uCAAiCE,MAAM,CAACC,IAAP,CAAYZ,KAA7C,CAFA,CAGPU,IAAI,CAAE,SAHC,CAAD,CAAR,CAMAX,WAAW,GAtBM,iFAwBjBO,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,YAAMA,OAFR,CAGPC,IAAI,CAAE,OAHC,CAAD,CAAR,CAxBiB,sGAAH,kBAAZH,aAAY,2CAAlB,CAiCA,mBACE,MAAC,GAAD,EACE,CAAC,CAAE,CADL,CAEE,KAAK,CAAE,CACLM,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAGLC,GAAG,CAAE,MAHA,CAFT,wBAQE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,aAHR,CAIE,KAAK,CAAEf,KAJT,CAKE,QAAQ,CAAE,kBAACgB,CAAD,QAAOf,SAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EALZ,CAME,SAAS,KANX,EARF,cAgBE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,gBAFR,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEhB,QAJT,CAKE,QAAQ,CAAE,kBAACc,CAAD,QAAOb,YAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EALZ,CAME,SAAS,KANX,EAhBF,cAwBE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,kBAFR,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEd,eAJT,CAKE,QAAQ,CAAE,kBAACY,CAAD,QAAOX,mBAAkB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB,EALZ,CAME,SAAS,KANX,EAxBF,cAgCE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAHT,CAIE,OAAO,CAAEZ,YAJX,qBAhCF,GADF,CA2CD,CAnFD,CAqFA,cAAeT,OAAf"},"metadata":{},"sourceType":"module"}