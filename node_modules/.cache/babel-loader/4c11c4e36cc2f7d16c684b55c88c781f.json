{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\WebDev\\\\CryptoPedia\\\\crypto-pedia\\\\src\\\\CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoContext, \"Gq7De48h8abbN7rXPNWvFlysLIk=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"sources":["C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/src/CryptoContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({children}) => {\r\n \r\n    const [currency, setCurrency] = useState(\"INR\");\r\n    const [symbol, setSymbol] = useState(\"₹\");\r\n\r\n    useEffect(() => {\r\n        if(currency === \"INR\") setSymbol(\"₹\");\r\n        else if(currency === \"USD\") setSymbol(\"$\");\r\n    },[]);\r\n\r\nreturn (\r\n    <Crypto.Provider>\r\n        {children}\r\n    </Crypto.Provider>\r\n  )\r\n}\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n    return useContext(Crypto);\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;;AAEA,MAAMC,MAAM,gBAAGJ,aAAa,EAA5B;;AAEA,MAAMK,aAAa,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAElC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAGK,QAAQ,KAAK,KAAhB,EAAuBG,SAAS,CAAC,GAAD,CAAT,CAAvB,KACK,IAAGH,QAAQ,KAAK,KAAhB,EAAuBG,SAAS,CAAC,GAAD,CAAT;EAC/B,CAHQ,EAGP,EAHO,CAAT;EAKJ,oBACI,QAAC,MAAD,CAAQ,QAAR;IAAA,UACKJ;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKC,CAfD;;GAAMD,a;;KAAAA,a;AAiBN,eAAeA,aAAf;AAEA,OAAO,MAAMM,WAAW,GAAG,MAAM;EAAA;;EAC7B,OAAOV,UAAU,CAACG,MAAD,CAAjB;AACH,CAFM;;IAAMO,W;;MAAAA,W"},"metadata":{},"sourceType":"module"}