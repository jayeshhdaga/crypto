{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\WebDev\\\\CryptoPedia\\\\crypto-pedia\\\\src\\\\Components\\\\CoinInfo.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { HistoricalChart } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { Line } from \"react-chartjs-2\";\nimport SelectButton from \"./SelectButton\";\nimport { chartDays } from \"../config/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicalData, setHistoricalData] = useState(null);\n  const [days, setDays] = useState(1);\n  const [flag, setflag] = useState(false);\n  const {\n    currency\n  } = CryptoState();\n\n  const fetchHistoricData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setflag;\n    setHistoricalData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n  }, [days]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: !historicalData | flag === false ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"gold\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: historicalData.map(coin => {\n              let date = new Date(coin[0]);\n              let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return days === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: historicalData.map(coin => coin[1]),\n              label: `Price ( Past ${days} Days ) in ${currency}`,\n              borderColor: \"#EEBC1D\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"space-around\",\n            width: \"100%\"\n          },\n          children: chartDays.map(day => /*#__PURE__*/_jsxDEV(SelectButton, {\n            onClick: () => {\n              setDays(day.value);\n              setflag(false);\n            },\n            selected: day.value === days,\n            children: day.label\n          }, day.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinInfo, \"Q1J2YIHudaDsg9Q3PChtSPnnV7w=\", true);\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["axios","React","useEffect","useState","HistoricalChart","CryptoState","CircularProgress","createTheme","makeStyles","ThemeProvider","Line","SelectButton","chartDays","CoinInfo","coin","historicalData","setHistoricalData","days","setDays","flag","setflag","currency","fetchHistoricData","data","get","id","prices","darkTheme","palette","primary","main","type","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","elements","point","radius","day","value"],"sources":["C:/Users/abhis/Documents/WebDev/CryptoPedia/crypto-pedia/src/Components/CoinInfo.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { HistoricalChart } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport {CircularProgress, createTheme, makeStyles, ThemeProvider,} from \"@material-ui/core\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport SelectButton from \"./SelectButton\";\r\nimport { chartDays } from \"../config/data\";\r\n\r\n\r\nconst CoinInfo = ( { coin }) => {\r\n\r\n    const [historicalData, setHistoricalData] = useState(null);\r\n    const [days, setDays] = useState(1);\r\n    const [flag,setflag] = useState(false);\r\n\r\n    const { currency } = CryptoState();\r\n\r\n    const fetchHistoricData = async () => {\r\n        const { data } = await axios.get(HistoricalChart(coin.id, days, currency)); \r\n        setflag\r\n        setHistoricalData(data.prices);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHistoricData();\r\n    },[days]);\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n          primary: {\r\n            main: \"#fff\",\r\n          },\r\n          type: \"dark\",\r\n        },\r\n      });\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n            width: \"75%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: 25,\r\n            padding: 40,\r\n            [theme.breakpoints.down(\"md\")]: {\r\n              width: \"100%\",\r\n              marginTop: 0,\r\n              padding: 20,\r\n              paddingTop: 0,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n    <div className={classes.container}>\r\n\r\n      {\r\n        !historicalData | flag===false ? (\r\n            <CircularProgress style={{ color: \"gold\" }} size={250} thickness={1}/>\r\n            ) : (\r\n        <>\r\n          <Line\r\n            data={{\r\n              labels: historicalData.map((coin) => {\r\n                let date = new Date(coin[0]);\r\n                let time =\r\n                  date.getHours() > 12\r\n                    ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                    : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                return days === 1 ? time : date.toLocaleDateString();\r\n              }),\r\n\r\n              datasets: [\r\n                {\r\n                  data: historicalData.map((coin) => coin[1]),\r\n                  label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                  borderColor: \"#EEBC1D\",\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              elements: {\r\n                point: {\r\n                  radius: 1,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: 20,\r\n              justifyContent: \"space-around\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {chartDays.map((day) => (\r\n              <SelectButton\r\n                key={day.value}\r\n                onClick={() => {setDays(day.value);\r\n                  setflag(false);\r\n                }}\r\n                selected={day.value === days}\r\n              >\r\n                {day.label}\r\n              </SelectButton>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinInfo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,gBAAR,EAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,aAAnD,QAAwE,mBAAxE;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;;AAGA,MAAMC,QAAQ,GAAG,QAAe;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAE5B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACgB,IAAD,EAAMC,OAAN,IAAiBjB,QAAQ,CAAC,KAAD,CAA/B;EAEA,MAAM;IAAEkB;EAAF,IAAehB,WAAW,EAAhC;;EAEA,MAAMiB,iBAAiB,GAAG,YAAY;IAClC,MAAM;MAAEC;IAAF,IAAW,MAAMvB,KAAK,CAACwB,GAAN,CAAUpB,eAAe,CAACU,IAAI,CAACW,EAAN,EAAUR,IAAV,EAAgBI,QAAhB,CAAzB,CAAvB;IACAD,OAAO;IACPJ,iBAAiB,CAACO,IAAI,CAACG,MAAN,CAAjB;EACH,CAJD;;EAMAxB,SAAS,CAAC,MAAM;IACZoB,iBAAiB;EACpB,CAFQ,EAEP,CAACL,IAAD,CAFO,CAAT;EAIA,MAAMU,SAAS,GAAGpB,WAAW,CAAC;IAC1BqB,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,IAAI,EAAE;MADC,CADF;MAIPC,IAAI,EAAE;IAJC;EADiB,CAAD,CAA7B;EASA,MAAMC,SAAS,GAAGxB,UAAU,CAAEyB,KAAD,KAAY;IACrCC,SAAS,EAAE;MACPC,KAAK,EAAE,KADA;MAEPC,OAAO,EAAE,MAFF;MAGPC,aAAa,EAAE,QAHR;MAIPC,UAAU,EAAE,QAJL;MAKPC,cAAc,EAAE,QALT;MAMPC,SAAS,EAAE,EANJ;MAOPC,OAAO,EAAE,EAPF;MAQP,CAACR,KAAK,CAACS,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;QAC9BR,KAAK,EAAE,MADuB;QAE9BK,SAAS,EAAE,CAFmB;QAG9BC,OAAO,EAAE,EAHqB;QAI9BG,UAAU,EAAE;MAJkB;IARzB;EAD0B,CAAZ,CAAD,CAA5B;EAkBA,MAAMC,OAAO,GAAGb,SAAS,EAAzB;EAEF,oBACE,QAAC,aAAD;IAAe,KAAK,EAAEL,SAAtB;IAAA,uBACA;MAAK,SAAS,EAAEkB,OAAO,CAACX,SAAxB;MAAA,UAGI,CAACnB,cAAD,GAAkBI,IAAI,KAAG,KAAzB,gBACI,QAAC,gBAAD;QAAkB,KAAK,EAAE;UAAE2B,KAAK,EAAE;QAAT,CAAzB;QAA4C,IAAI,EAAE,GAAlD;QAAuD,SAAS,EAAE;MAAlE;QAAA;QAAA;QAAA;MAAA,QADJ,gBAGA;QAAA,wBACE,QAAC,IAAD;UACE,IAAI,EAAE;YACJC,MAAM,EAAEhC,cAAc,CAACiC,GAAf,CAAoBlC,IAAD,IAAU;cACnC,IAAImC,IAAI,GAAG,IAAIC,IAAJ,CAASpC,IAAI,CAAC,CAAD,CAAb,CAAX;cACA,IAAIqC,IAAI,GACNF,IAAI,CAACG,QAAL,KAAkB,EAAlB,GACK,GAAEH,IAAI,CAACG,QAAL,KAAkB,EAAG,IAAGH,IAAI,CAACI,UAAL,EAAkB,KADjD,GAEK,GAAEJ,IAAI,CAACG,QAAL,EAAgB,IAAGH,IAAI,CAACI,UAAL,EAAkB,KAH9C;cAIA,OAAOpC,IAAI,KAAK,CAAT,GAAakC,IAAb,GAAoBF,IAAI,CAACK,kBAAL,EAA3B;YACD,CAPO,CADJ;YAUJC,QAAQ,EAAE,CACR;cACEhC,IAAI,EAAER,cAAc,CAACiC,GAAf,CAAoBlC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAjC,CADR;cAEE0C,KAAK,EAAG,gBAAevC,IAAK,cAAaI,QAAS,EAFpD;cAGEoC,WAAW,EAAE;YAHf,CADQ;UAVN,CADR;UAmBE,OAAO,EAAE;YACPC,QAAQ,EAAE;cACRC,KAAK,EAAE;gBACLC,MAAM,EAAE;cADH;YADC;UADH;QAnBX;UAAA;UAAA;UAAA;QAAA,QADF,eA6BE;UACE,KAAK,EAAE;YACLxB,OAAO,EAAE,MADJ;YAELI,SAAS,EAAE,EAFN;YAGLD,cAAc,EAAE,cAHX;YAILJ,KAAK,EAAE;UAJF,CADT;UAAA,UAQGvB,SAAS,CAACoC,GAAV,CAAea,GAAD,iBACb,QAAC,YAAD;YAEE,OAAO,EAAE,MAAM;cAAC3C,OAAO,CAAC2C,GAAG,CAACC,KAAL,CAAP;cACd1C,OAAO,CAAC,KAAD,CAAP;YACD,CAJH;YAKE,QAAQ,EAAEyC,GAAG,CAACC,KAAJ,KAAc7C,IAL1B;YAAA,UAOG4C,GAAG,CAACL;UAPP,GACOK,GAAG,CAACC,KADX;YAAA;YAAA;YAAA;UAAA,QADD;QARH;UAAA;UAAA;UAAA;QAAA,QA7BF;MAAA;IANJ;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AA8DD,CA7GD;;GAAMjD,Q;;KAAAA,Q;AA+GN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}